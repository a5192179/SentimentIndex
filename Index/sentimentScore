# **************************************************************************
# *【Creat time】：2018-12-01 15:14          【Version】：0.0
# *【Writer】：LiShuai 461837929@qq.com
# *【Writer department】：
# *【Function】：
# * coinPrice 相关的函数
# * 输入：
# * 起始时间
# *
# *【Description】：
# *
# *
# *-------------------------------------------------------------------------
# *【Modification】：****-**-** **：**       【Version】：*.*
# *
# *【Writer】：LiShuai 461837929@qq.com
# *【Writer department】：
# *【Function】：
# *
# *
# *
# *【Description】：
# *
# *
# *
# **************************************************************************
import csv
import os
import sys
currentPath = os.getcwd() # 返回当前工作目录
toolsPath = currentPath + '/../Tools'
sys.path.append(toolsPath) # 添加自己指定的搜索路径
import convertTime
LSTMPath = currentPath + '/../LSTM'
sys.path.append(LSTMPath) # 添加自己指定的搜索路径
from LSTM2 import score
from LSTM2 import mySplit

class sentimentScore:

    def __init__(self, wordsPath, netPath):
        self.sentimentScore = []
        self.wordsPath = wordsPath
        self.netPath = netPath

    def getMes(self, ):
        testMarks = []
        testMes = []
        testTime = []
        testID = []
        lineNum = 0
        bullLineNum = 0
        bearLineNum = 0
        with open(testDataPath, 'r', newline='', encoding='utf-8') as f:
            lines = csv.reader(f)
            for line in lines:
                lineNum += 1
                testMes.append(line[3])
                testTime.append(line[1])
                testID.append(line[0])
                if line[2] == '1':
                    bullLineNum += 1
                    testMarks.append(1)
                elif line[2] == '-1':
                    bearLineNum += 1
                    testMarks.append(0)
                else:
                    testMarks.append(0.5)
        logger.info(
            'lineNum =' + str(lineNum) + ', bullLineNum=' + str(bullLineNum) + ', bearLineNum=' + str(bearLineNum))

    def setSentimentScore(self, beginTime, endTime, dataPeriod):
        if self.sentimentScore != []:
            print('coinPrice has been set')
        allMessages = self.readData(self.wordsPath)
        cutedMessages = self.cutData(beginTime, endTime, allMessages)
        convertMessages = self.convertData(dataPeriod, cutedMessages)
        score = self.computeScore(self.netPath, convertMessages)
