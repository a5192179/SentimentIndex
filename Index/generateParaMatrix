# **************************************************************************
# *【Creat time】：2018-11-02 21:58          【Version】：0.0
# *【Writer】：LiShuai 461837929@qq.com
# *【Writer department】：
# *【Function】：
# * 根据指定时间的价格数据、情绪指数输出拟合的系数矩阵
# * 输入：
# * 起始时间
# * 结束时间
# * 时间间隔
# * 情绪文本路径
# * 网络参数
# * 价格文件路径
# * 参数保存路径
# * 输出：
# * 系数矩阵参数
# *【Description】：
# *
# *
# *-------------------------------------------------------------------------
# *【Modification】：****-**-** **：**       【Version】：*.*
# *
# *【Writer】：LiShuai 461837929@qq.com
# *【Writer department】：
# *【Function】：
# *
# *
# *
# *【Description】：
# *
# *
# *
# **************************************************************************


import os
import sys

currentPath = os.getcwd() # 返回当前工作目录
toolsPath = currentPath + '/../Tools'
sys.path.append(toolsPath) # 添加自己指定的搜索路径
import convertTime
coinPricePath = currentPath
sys.path.append(coinPricePath) # 添加自己指定的搜索路径
from coinPrice import coinPrice
# from sentimentIndex import sentimentIndex

def generateParaMatrix(beginTime, endTime, dataPeriod, predictPeriod, wordsPath, netPath, pricePath, paraOutPath):
    coinPriceIns = coinPrice(pricePath)
    coinPriceIns.setCoinPrice(beginTime, endTime, dataPeriod)
    # sentimentIndex = sentimentIndex(wordsPath, netPath)
    # sentimentIndex.setIndex(beginTime, endTime, dataPeriod)
    a=1

if __name__ == '__main__':
    strBeginTime = '2018-11-11T00:00:00'
    strEndTime = '2018-11-11T01:00:00'
    dataPeriod = 1800  # second
    predictPeriod = 1800  # second
    wordsPath = '../../Data/TidyOriginalData/CleanedMessage.csv'
    dictWordsPath = '../../Data/TidyOriginalData/CleanedMessage.csv'
    netPath = '../../Data/Output/LSTM2_adam_BigData2_mask_zero=True_Porter_MoreMark_NoSW_VALOn_Epoch5'
    pricePath = '../../Data/Coin/Cleaned/cleanedMinutePrice.csv'
    paraOutPath = '../../Data/Output/Para/para.csv'

    beginTime = convertTime.datetime_timestamp(strBeginTime)
    endTime = convertTime.datetime_timestamp(strEndTime)

    generateParaMatrix(beginTime, endTime, dataPeriod, predictPeriod, wordsPath, dictWordsPath, netPath, pricePath, paraOutPath)





